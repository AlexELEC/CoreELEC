From 1c5edb42f67edc78113c2ee513c8d2bc33801015 Mon Sep 17 00:00:00 2001
From: Portisch <hugo.portisch@yahoo.de>
Date: Wed, 12 Mar 2025 13:38:13 +0100
Subject: [PATCH] fix compiling: error: array subscript is outside array bounds

---
 library/common.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/library/common.h b/library/common.h
index 7bb2674..83783af 100644
--- a/library/common.h
+++ b/library/common.h
@@ -193,7 +193,7 @@ static inline void mbedtls_xor(unsigned char *r,
 #if defined(MBEDTLS_HAVE_NEON_INTRINSICS) && \
     (!(defined(MBEDTLS_COMPILER_IS_GCC) && MBEDTLS_GCC_VERSION < 70300))
     /* Old GCC versions generate a warning here, so disable the NEON path for these compilers */
-    for (; (i + 16) <= n; i += 16) {
+    for (; (i + 16) <= (n - 1); i += 16) {
         uint8x16_t v1 = vld1q_u8(a + i);
         uint8x16_t v2 = vld1q_u8(b + i);
         uint8x16_t x = veorq_u8(v1, v2);
@@ -210,7 +210,7 @@ static inline void mbedtls_xor(unsigned char *r,
 #endif
 #elif defined(MBEDTLS_ARCH_IS_X64) || defined(MBEDTLS_ARCH_IS_ARM64)
     /* This codepath probably only makes sense on architectures with 64-bit registers */
-    for (; (i + 8) <= n; i += 8) {
+    for (; (i + 8) <= (n - 1); i += 8) {
         uint64_t x = mbedtls_get_unaligned_uint64(a + i) ^ mbedtls_get_unaligned_uint64(b + i);
         mbedtls_put_unaligned_uint64(r + i, x);
     }
@@ -220,7 +220,7 @@ static inline void mbedtls_xor(unsigned char *r,
     }
 #endif
 #else
-    for (; (i + 4) <= n; i += 4) {
+    for (; (i + 4) <= (n - 1); i += 4) {
         uint32_t x = mbedtls_get_unaligned_uint32(a + i) ^ mbedtls_get_unaligned_uint32(b + i);
         mbedtls_put_unaligned_uint32(r + i, x);
     }
@@ -231,7 +231,7 @@ static inline void mbedtls_xor(unsigned char *r,
 #endif
 #endif
 #endif
-    for (; i < n; i++) {
+    for (; i < (n - 1); i++) {
         r[i] = a[i] ^ b[i];
     }
 }
-- 
2.43.0

