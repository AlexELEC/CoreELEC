From e70890d9936c7461dd2359bbc69c5b0efa5213be Mon Sep 17 00:00:00 2001
From: Portisch <hugo.portisch@yahoo.de>
Date: Tue, 11 Apr 2023 15:06:33 +0200
Subject: [PATCH 05/15] libdovi: add option to change used mode Modes:  0:
 Don't modify the RPU  1: Converts the RPU to be MEL compatible  2: Converts
 the RPU to be profile 8.1 compatible.     Both luma and chroma mapping curves
 are set to no-op.     This mode handles source profiles 5, 7 and 8.  3:
 Converts to static profile 8.4  4: Converts to profile 8.1 preserving luma
 and chroma mapping.     Old mode 2 behaviour. Reference:
 https://github.com/quietvoid/dovi_tool/blob/main/dolby_vision/src/rpu/dovi_rpu.rs

---
 .../resources/strings.po                      | 33 ++++++++++++++++++-
 system/settings/settings.xml                  | 16 +++++++--
 .../VideoPlayer/DVDCodecs/Video/AMLCodec.cpp  |  4 +--
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.cpp  |  7 ++--
 .../Video/DVDVideoCodecAndroidMediaCodec.cpp  |  6 ++--
 xbmc/utils/BitstreamConverter.cpp             |  8 ++---
 xbmc/utils/BitstreamConverter.h               |  4 +--
 xbmc/windowing/amlogic/WinSystemAmlogic.cpp   |  2 +-
 8 files changed, 61 insertions(+), 19 deletions(-)

diff --git a/addons/resource.language.en_gb/resources/strings.po b/addons/resource.language.en_gb/resources/strings.po
index 9ce858be19..5ebd27134c 100644
--- a/addons/resource.language.en_gb/resources/strings.po
+++ b/addons/resource.language.en_gb/resources/strings.po
@@ -23941,7 +23941,38 @@ msgstr ""
 #. Help text for setting "Convert Dolby Vision for compatibility" of label #39196
 #: system/settings/settings.xml
 msgctxt "#39197"
-msgid "If enabled, Dolby Vision profile 7 will be converted to profile 8.1, which is more commonly supported by devices. Enable if your device supports Dolby Vision, but has issues with some videos."
+msgid "Converts Dolby Vision profile 7 by chosen mode"
+msgstr ""
+
+#. Enum value for "Convert Dolby Vision for compatibility" of label #39197
+#: system/settings/settings.xml
+msgctxt "#39300"
+msgid "Lossless"
+msgstr ""
+
+#. Enum value for "Convert Dolby Vision for compatibility" of label #39197
+#: system/settings/settings.xml
+msgctxt "#39301"
+msgid "Minimal EL"
+msgstr ""
+
+#. Enum value for "Convert Dolby Vision for compatibility" of label #39197
+#: system/settings/settings.xml
+msgctxt "#39302"
+msgid "Profile 8.1"
+msgstr ""
+
+#. Enum value for "Convert Dolby Vision for compatibility" of label #39197
+#: system/settings/settings.xml
+msgctxt "#39303"
+msgid "Profile 8.4"
+msgstr ""
+
+
+#. Enum value for "Convert Dolby Vision for compatibility" of label #39197
+#: system/settings/settings.xml
+msgctxt "#39304"
+msgid "Profile 8.1 MP"
 msgstr ""
 
 # 40000 to 40800 are reserved for Video Versions feature
diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index 097565d14b..d5ad5716af 100755
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -254,7 +254,7 @@
           <default>true</default>
           <control type="toggle" />
         </setting>
-        <setting id="videoplayer.convertdovi" type="boolean" label="39196" help="39197">
+        <setting id="videoplayer.convertdovi" type="integer" label="39196" help="39197">
           <requirement>
             <or>
               <condition>HAS_MEDIACODEC</condition>
@@ -267,8 +267,18 @@
             </dependency>
           </dependencies>
           <level>2</level>
-          <default>true</default>
-          <control type="toggle" />
+          <default>2</default>
+          <constraints>
+            <options>
+              <option label="39300">0</option>  <!-- Lossless -->
+              <option label="39301">1</option>  <!-- ToMel -->
+              <option label="39302">2</option>  <!-- To81 -->
+              <option label="39303">3</option>  <!-- To84 -->
+              <option label="39304">4</option>  <!-- To81MappingPreserved -->
+            </options>
+          </constraints>
+          <control type="spinner" format="string" />
+          <control type="edit" format="integer" />
         </setting>
       </group>
       <group id="4" label="14232">
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
index c84347beca..f5b7c4e950 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
@@ -2006,8 +2006,8 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
     CSysfsPath("/sys/module/amdolby_vision/parameters/dolby_vision_enable", 1);
 
     am_private->gcodec.dv_enable = 1;
-    if (hints.dovi.dv_profile == 7 && !CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(
-        CSettings::SETTING_VIDEOPLAYER_CONVERTDOVI))
+    if (hints.dovi.dv_profile == 7 && CServiceBroker::GetSettingsComponent()->GetSettings()->GetInt(
+        CSettings::SETTING_VIDEOPLAYER_CONVERTDOVI) == 0)
     {
       CSysfsPath amdolby_vision_debug{"/sys/class/amdolby_vision/debug"};
       if (amdolby_vision_debug.Exists())
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
index 8d9e716062..ede92d3f18 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
@@ -282,14 +282,15 @@ bool CDVDVideoCodecAmlogic::Open(CDVDStreamInfo &hints, CDVDCodecOptions &option
       {
         if (m_bitstream && aml_support_dolby_vision())
         {
-          bool convertDovi = CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(
+          int convertDovi = CServiceBroker::GetSettingsComponent()->GetSettings()->GetInt(
               CSettings::SETTING_VIDEOPLAYER_CONVERTDOVI);
           bool user_dv_disable = CServiceBroker::GetSettingsComponent()->GetSettings()->GetBool(
               CSettings::SETTING_COREELEC_AMLOGIC_DV_DISABLE);
           if (convertDovi && !user_dv_disable)
           {
-            CLog::Log(LOGDEBUG, "{}::{} - HEVC bitstream profile 7 will be converted to profile 8", __MODULE_NAME__, __FUNCTION__);
-            m_bitstream->SetConvertDovi(convertDovi && !user_dv_disable);
+            CLog::Log(LOGDEBUG, "{}::{} - HEVC bitstream profile 7 will be converted by chosen mode {:d}",
+              __MODULE_NAME__, __FUNCTION__, convertDovi);
+            m_bitstream->SetConvertDovi(convertDovi);
           }
         }
       }
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAndroidMediaCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAndroidMediaCodec.cpp
index 4dd2a9d71f..db334c758c 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAndroidMediaCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAndroidMediaCodec.cpp
@@ -499,8 +499,8 @@ bool CDVDVideoCodecAndroidMediaCodec::Open(CDVDStreamInfo &hints, CDVDCodecOptio
       m_formatname = "amc-hevc";
 
       const auto settings = CServiceBroker::GetSettingsComponent()->GetSettings();
-      const bool convertDovi =
-          (settings) ? settings->GetBool(CSettings::SETTING_VIDEOPLAYER_CONVERTDOVI) : false;
+      const int convertDovi =
+          (settings) ? settings->GetInt(CSettings::SETTING_VIDEOPLAYER_CONVERTDOVI) : false;
 
       bool isDvhe = (m_hints.codec_tag == MKTAG('d', 'v', 'h', 'e'));
       bool isDvh1 = (m_hints.codec_tag == MKTAG('d', 'v', 'h', '1'));
@@ -555,7 +555,7 @@ bool CDVDVideoCodecAndroidMediaCodec::Open(CDVDStreamInfo &hints, CDVDCodecOptio
                 break;
               case 7:
                 // set profile 8 when converting
-                if (convertDovi && CJNIBase::GetSDKVersion() >= 27)
+                if ((convertDovi > 0) && CJNIBase::GetSDKVersion() >= 27)
                   profile = CJNIMediaCodecInfoCodecProfileLevel::DolbyVisionProfileDvheSt;
 
                 // Profile 7 is not commonly supported. Not setting the profile here
diff --git a/xbmc/utils/BitstreamConverter.cpp b/xbmc/utils/BitstreamConverter.cpp
index 326021d6ea..c0bef30319 100644
--- a/xbmc/utils/BitstreamConverter.cpp
+++ b/xbmc/utils/BitstreamConverter.cpp
@@ -279,7 +279,7 @@ static bool has_sei_recovery_point(const uint8_t *p, const uint8_t *end)
 #ifdef HAVE_LIBDOVI
 // The returned data must be freed with `dovi_data_free`
 // May be NULL if no conversion was done
-static const DoviData* convert_dovi_rpu_nal(uint8_t* buf, uint32_t nal_size)
+static const DoviData* convert_dovi_rpu_nal(uint8_t* buf, uint32_t nal_size, int mode)
 {
   DoviRpuOpaque* rpu = dovi_parse_unspec62_nalu(buf, nal_size);
   const DoviRpuDataHeader* header = dovi_rpu_get_header(rpu);
@@ -287,7 +287,7 @@ static const DoviData* convert_dovi_rpu_nal(uint8_t* buf, uint32_t nal_size)
 
   if (header && header->guessed_profile == 7)
   {
-    int ret = dovi_convert_rpu_with_mode(rpu, 2);
+    int ret = dovi_convert_rpu_with_mode(rpu, mode);
     if (ret < 0)
       goto done;
 
@@ -367,7 +367,7 @@ CBitstreamConverter::CBitstreamConverter()
   m_convert_bytestream = false;
   m_sps_pps_context.sps_pps_data = NULL;
   m_start_decode = true;
-  m_convert_dovi = false;
+  m_convert_dovi = 0;
 }
 
 CBitstreamConverter::~CBitstreamConverter()
@@ -994,7 +994,7 @@ bool CBitstreamConverter::BitstreamConvert(uint8_t* pData, int iSize, uint8_t **
         {
 #ifdef HAVE_LIBDOVI
           // Convert the RPU itself
-          rpu_data = convert_dovi_rpu_nal(buf, nal_size);
+          rpu_data = convert_dovi_rpu_nal(buf, nal_size, m_convert_dovi);
           if (rpu_data)
           {
             buf_to_write = rpu_data->data;
diff --git a/xbmc/utils/BitstreamConverter.h b/xbmc/utils/BitstreamConverter.h
index 118cdcc281..86cb14da11 100644
--- a/xbmc/utils/BitstreamConverter.h
+++ b/xbmc/utils/BitstreamConverter.h
@@ -107,7 +107,7 @@ public:
   int               GetExtraSize() const;
   void              ResetStartDecode(void);
   bool              CanStartDecode() const;
-  void SetConvertDovi(bool value) { m_convert_dovi = value; }
+  void SetConvertDovi(int value) { m_convert_dovi = value; }
 
   static bool       mpeg2_sequence_header(const uint8_t *data, const uint32_t size, mpeg2_sequence *sequence);
   static bool       h264_sequence_header(const uint8_t *data, const uint32_t size, h264_sequence *sequence);
@@ -153,5 +153,5 @@ protected:
   bool              m_convert_bytestream;
   AVCodecID         m_codec;
   bool              m_start_decode;
-  bool m_convert_dovi;
+  int               m_convert_dovi;
 };
diff --git a/xbmc/windowing/amlogic/WinSystemAmlogic.cpp b/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
index 616c205e6f..6f57b7efcb 100644
--- a/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
+++ b/xbmc/windowing/amlogic/WinSystemAmlogic.cpp
@@ -103,7 +103,7 @@ bool CWinSystemAmlogic::InitWindowSystem()
     if (setting)
     {
       setting->SetVisible(false);
-      settings->SetBool(CSettings::SETTING_VIDEOPLAYER_CONVERTDOVI, true);
+      settings->SetInt(CSettings::SETTING_VIDEOPLAYER_CONVERTDOVI, 2);
     }
   }
 
-- 
2.43.0

